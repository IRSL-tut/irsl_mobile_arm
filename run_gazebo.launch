<launch>
  <!-- this launch provides almost the same robot API in gazebo world
       as aero_startup/aero_bringup.launch -->
  <!-- these are the arguments you can pass this launch file, for example PAUSED:=true -->
  <arg name="GUI"      default="true"/>
  <arg name="HEADLESS" default="false"/>
  <arg name="PAUSED"   default="false"/>
  <arg name="WORLD_FILE" default="/tmp/simple_move/world/aero_shelf.world"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="debug" default="false"/>

  <env name="GAZEBO_MODEL_PATH" value="/tmp/simple_move/gazebo_models" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="world_name" value="$(arg WORLD_FILE)"/>
    <arg name="gui"    value="$(arg GUI)" />
    <arg name="paused" value="$(arg PAUSED)"/>
    <arg name="headless" value="$(arg HEADLESS)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="debug"  value="$(arg debug)" />
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
         textfile="/tmp/simple_move/simple_move.urdf" />

  <node name="simple_move_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        respawn="false" output="screen"
        args="-urdf -model simple_movee -param robot_description"/>

  <include file="/tmp/simple_move/static_map_navigation.launch">
    <arg name="map_file" value="/tmp/simple_move/map/map.yaml" />
  </include>

</launch>
